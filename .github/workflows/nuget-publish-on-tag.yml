name: nuget-publish-tag

on:
  push:
    tags: 
      - '[0-9]+.[0-9]+.[0-9]+*'
    ##branches:
    ##- develop

jobs:
 dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Get Build Version
      run: |
        Import-Module .\build\GetBuildVersion.psm1
        Write-Host $Env:GITHUB_REF
        $version = GetBuildVersion -VersionString $Env:GITHUB_REF
        echo "BUILD_VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      shell: pwsh

    - name: Dump GitHub context
      id: github_context_step
      run: echo '${{ github.ref }}'
  ##build:

  ##  env:
  ##    BUILD_CONFIG: 'Release'
  ##    SOLUTION: 'DevextremeToys.sln'

  ##  runs-on: ubuntu-latest

  ##  steps:
  ##  - uses: actions/checkout@v2
    
  ##  - name: Get Build Version
  ##    run: echo "$GITHUB_CONTEXT"


    ##- name: Setup NuGet
    ##  uses: NuGet/setup-nuget@v1.0.5

    ##- name: Restore dependencies
    ##  run: dotnet restore

    ##- name: Setup .NET
    ##  uses: actions/setup-dotnet@v2
    ##  with:
    ##    dotnet-version: |
    ##      6.0.x
    ##      5.0.x
    ##      3.1.x

    ##- name: Build
    ##  run: dotnet build $SOLUTION --configuration $BUILD_CONFIG /p:Platform="Any CPU" -p:Version=$BUILD_VERSION --no-restore
     
    ##- name: Test
    ##  run: dotnet test /p:Configuration=$BUILD_CONFIG /p:Platform="Any CPU" --no-restore --no-build --verbosity normal
      
    ##- name: Get Build Version
    ##  run: |
    ##    Import-Module .\build\GetBuildVersion.psm1
    ##    Write-Host $Env:GITHUB_REF
    ##    echo $Env:GITHUB_REF
    ##    echo github.ref

    ##- name: Publish
    ##  if: startsWith(github.ref, 'refs/heads/release')
    ##  run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
